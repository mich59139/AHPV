const GITHUB_USER="mich59139", GITHUB_REPO="AHPV", GITHUB_BRANCH="main";
const CSV_PATH="data/articles.csv", AUTHORS_PATH="data/auteurs.csv", CITIES_PATH="data/villes.csv", THEMES_PATH="data/themes.csv";
const RAW_ART=`https://raw.githubusercontent.com/${GITHUB_USER}/${GITHUB_REPO}/${GITHUB_BRANCH}/${CSV_PATH}`;
const RAW_AUT=`https://raw.githubusercontent.com/${GITHUB_USER}/${GITHUB_REPO}/${GITHUB_BRANCH}/${AUTHORS_PATH}`;
const RAW_VIL=`https://raw.githubusercontent.com/${GITHUB_USER}/${GITHUB_REPO}/${GITHUB_BRANCH}/${CITIES_PATH}`;
const RAW_THE=`https://raw.githubusercontent.com/${GITHUB_USER}/${GITHUB_REPO}/${GITHUB_BRANCH}/${THEMES_PATH}`;
let ARTICLES=[], FILTER_YEAR="", FILTER_NUM="", QUERY="", sortCol=null, sortDir="asc", currentPage=1, pageSize=50;
const deburr=s=>(s||"").normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase().replace(/[.\u00B7·]/g," ").replace(/\s+/g," ").trim();
const splitMulti=s=>(s||"").split(/;|,|\/|&| et |•|\u00B7/gi).map(x=>x.trim()).filter(Boolean);
function parseCSV(text){const l=text.replace(/\r\n/g,"\n").replace(/\r/g,"\n").split("\n");if(!l.length)return[];const h=l.shift().split(","),o=[];for(const ln of l){if(!ln.trim())continue;const r=[];let c="",q=!1;for(let i=0;i<ln.length;i++){const ch=ln[i];if(q){if(ch=='"'&&ln[i+1]=='"'){c+='"';i++;}else if(ch=='"'){q=!1;}else c+=ch;}else{if(ch=='"'){q=!0;}else if(ch==','){r.push(c);c="";}else c+=ch;}}r.push(c);const obj={};h.forEach((x,i)=>obj[x]=r[i]??"");o.push(obj);}return o}
function parseOneColCSV(text){const l=text.replace(/\r\n/g,"\n").replace(/\r/g,"\n").split("\n").map(x=>x.trim()).filter(Boolean);if(!l.length)return[];const head=l[0].toLowerCase();const c=(/auteur|ville|th[eè]me/.test(head))?l.slice(1):l;return Array.from(new Set(c)).sort((a,b)=>a.localeCompare(b,"fr",{sensitivity:"base"}))}
async function fetchText(u){const r=await fetch(u,{cache:"no-store"});if(!r.ok)throw new Error("fetch "+u);return r.text()}
function refreshNumeroOptions(){const fy=document.getElementById("filter-annee"), fn=document.getElementById("filter-numero"); if(!fy||!fn)return; const y=fy.value; let nums=ARTICLES.filter(r=>!y||(r["Année"]||"")==y).map(r=>(r["Numéro"]==null?"":(""+r["Numéro"]).trim())).filter(Boolean); nums=Array.from(new Set(nums)).sort((a,b)=>(""+a).localeCompare(""+b,"fr",{numeric:true})); const cur=fn.value; fn.innerHTML='<option value="">(tous)</option>'+nums.map(n=>`<option value="${n}">${n}</option>`).join(""); if(nums.includes(cur)) fn.value=cur; else fn.value="";}
function applyFilters(){let rows=ARTICLES.slice(); if(FILTER_YEAR)rows=rows.filter(r=>(r["Année"]||"")===FILTER_YEAR); if(FILTER_NUM)rows=rows.filter(r=>((''+(r["Numéro"]||'')).trim()===(''+FILTER_NUM).trim())); if(QUERY){const q=QUERY.toLowerCase(); rows=rows.filter(r=>Object.values(r).some(v=>(v??"").toString().toLowerCase().includes(q)))} if(sortCol){const f=sortDir==="desc"?-1:1; rows.sort((a,b)=>(""+(a[sortCol]??"")).localeCompare(""+(b[sortCol]??"),"fr",{numeric:true,sensitivity:"base"})*f)} return rows}
function render(){const rows=applyFilters(), total=rows.length, start=(currentPage-1)*pageSize, page=rows.slice(start,start+pageSize); const tb=document.getElementById("tbody"); tb.innerHTML=page.map(r=>`<tr class="row">
<td data-label="Année">${r["Année"]||""}</td><td data-label="Numéro">${r["Numéro"]||""}</td><td data-label="Titre">${r["Titre"]||""}</td><td data-label="Page(s)">${r["Page(s)"]||""}</td><td data-label="Auteur(s)">${r["Auteur(s)"]||""}</td><td data-label="Ville(s)">${r["Ville(s)"]||""}</td><td data-label="Thème(s)">${r["Theme(s)"]||""}</td><td data-label="Période">${r["Epoque"]||""}</td><td class="actions"></td></tr>`).join(""); const pages=Math.max(1,Math.ceil(total/pageSize)); document.getElementById("pageinfo").textContent=`${Math.min(currentPage,pages)} / ${pages} — ${total} ligne(s)`; document.getElementById("prev").disabled=currentPage<=1; document.getElementById("next").disabled=currentPage>=pages; document.querySelectorAll("th[data-col]").forEach(th=>{ th.classList.remove("sort-asc","sort-desc"); if(th.dataset.col===sortCol) th.classList.add(sortDir==="asc"?"sort-asc":"sort-desc"); })}
function bindUI(){const fy=document.getElementById("filter-annee"), fn=document.getElementById("filter-numero"), q=document.getElementById("search"); fy?.addEventListener("change",()=>{FILTER_YEAR=fy.value; if(!FILTER_YEAR){ fn.value=''; FILTER_NUM=''; q.value=''; QUERY=''; sortCol=null; sortDir='asc'; } refreshNumeroOptions(); currentPage=1; render();}); fn?.addEventListener("change",()=>{FILTER_NUM=fn.value; currentPage=1; render();}); q?.addEventListener("input",(()=>{let t;return(e)=>{clearTimeout(t);t=setTimeout(()=>{QUERY=e.target.value; currentPage=1; render();},180);}})()); document.getElementById("prev")?.addEventListener("click",()=>{if(currentPage>1){currentPage--; render();}}); document.getElementById("next")?.addEventListener("click",()=>{currentPage++; render();}); document.querySelectorAll("th[data-col]").forEach(th=>{const col=th.dataset.col; const act=()=>{ if(sortCol===col) sortDir=(sortDir==="asc"?"desc":"asc"); else { sortCol=col; sortDir="asc"; } currentPage=1; render(); }; th.addEventListener("click",act); th.addEventListener("keydown",e=>{ if(e.key==="Enter"||e.key===" "){ e.preventDefault(); act(); } }); }); const head=["Année","Numéro","Titre","Page(s)","Auteur(s)","Ville(s)","Theme(s)","Epoque"]; const toCSV=rows=> head.join(',')+'\n'+rows.map(r=>head.map(h=>{let s=(r[h]??"").toString().replaceAll('"','""'); return /[",\n]/.test(s)?'"'+s+'"':s;}).join(',')).join('\n')+'\n'; const download=(name,text,mime)=>{const a=document.createElement('a'); a.href=URL.createObjectURL(new Blob([text],{type:mime||'text/csv;charset=utf-8'})); a.download=name; a.click(); URL.revokeObjectURL(a.href)}; document.getElementById("export-copy")?.addEventListener("click",async()=>{const t=head.join("\t")+'\n'+applyFilters().map(r=>head.map(h=>r[h]??"").join("\t")).join("\n")+'\n'; try{await navigator.clipboard.writeText(t); alert("Copié !");}catch{download('articles_filtrés.tsv',t,'text/tab-separated-values;charset=utf-8')}}); document.getElementById("export-csv")?.addEventListener("click",()=>download('articles_filtrés.csv',toCSV(applyFilters()))); document.getElementById("export-csv-all")?.addEventListener("click",()=>download('articles_tout.csv',toCSV(ARTICLES))); document.getElementById("export-print")?.addEventListener("click",()=>window.print()); document.getElementById("export-xlsx")?.addEventListener("click",async()=>{ if(!window.XLSX){ await new Promise((res,rej)=>{ const s=document.createElement('script'); s.src='https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js'; s.onload=res; s.onerror=rej; document.head.appendChild(s); }); } const data=applyFilters().map(r=>{ const o={}; head.forEach(h=>o[h]=r[h]??''); return o; }); const wb=XLSX.utils.book_new(); const ws=XLSX.utils.json_to_sheet(data); XLSX.utils.book_append_sheet(wb,ws,'Articles'); XLSX.writeFile(wb,'articles_filtrés.xlsx'); }); document.getElementById("export-xlsx-all")?.addEventListener("click",async()=>{ if(!window.XLSX){ await new Promise((res,rej)=>{ const s=document.createElement('script'); s.src='https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js'; s.onload=res; s.onerror=rej; document.head.appendChild(s); }); } const data=ARTICLES.map(r=>{ const o={}; head.forEach(h=>o[h]=r[h]??''); return o; }); const wb=XLSX.utils.book_new(); const ws=XLSX.utils.json_to_sheet(data); XLSX.utils.book_append_sheet(wb,ws,'Catalogue'); XLSX.writeFile(wb,'articles_tout.xlsx'); });}
document.addEventListener('DOMContentLoaded', async()=>{ let A=[],V=[],T=[]; try{ ARTICLES=parseCSV(await fetchText(RAW_ART)); }catch(e){ console.error(e); ARTICLES=[]; } try{A=parseOneColCSV(await fetchText(RAW_AUT));}catch{} try{V=parseOneColCSV(await fetchText(RAW_VIL));}catch{} try{T=parseOneColCSV(await fetchText(RAW_THE));}catch{} if(!A.length)A=Array.from(new Set(ARTICLES.flatMap(r=>splitMulti(r["Auteur(s)"])))).sort((a,b)=>a.localeCompare(b,"fr",{sensitivity:"base"})); if(!V.length)V=Array.from(new Set(ARTICLES.flatMap(r=>splitMulti(r["Ville(s)"])))).sort((a,b)=>a.localeCompare(b,"fr",{sensitivity:"base"})); if(!T.length)T=Array.from(new Set(ARTICLES.flatMap(r=>splitMulti(r["Theme(s)"])))).sort((a,b)=>a.localeCompare(b,"fr",{sensitivity:"base"})); document.getElementById("dl-auteurs").innerHTML=A.slice(0,2000).map(x=>`<option value="${x}">`).join(""); document.getElementById("dl-villes").innerHTML=V.slice(0,2000).map(x=>`<option value="${x}">`).join(""); document.getElementById("dl-themes").innerHTML=T.slice(0,2000).map(x=>`<option value="${x}">`).join(""); const years=Array.from(new Set(ARTICLES.map(r=>r["Année"]).filter(Boolean))).sort((a,b)=>(""+a).localeCompare(""+b,"fr",{numeric:true})); document.getElementById("filter-annee").innerHTML='<option value="">(toutes)</option>'+years.map(y=>`<option value="${y}">${y}</option>`).join(""); refreshNumeroOptions(); bindUI(); render();});